environment = <%= @params[:environment].inspect %>
rails_root = <%= @params[:rails_root].inspect %>
user = <%= @params[:user].inspect %>
queues = <%= @params[:queues].inspect %>


queues.each do |name, num|
  num.times do |i|
    God.watch do |w|
      w.dir      = rails_root
      w.name     = "worker-#{name}-#{i+1}"
      w.group    = 'workers'
      w.interval = 30.seconds
      w.env      = {"QUEUE" => name, "RAILS_ENV" => environment}
      w.start    = "bundle exec rake -f #{rails_root}/Rakefile environment resque:work"

      w.uid = user
      w.gid = user

      # restart if memory gets too high
      w.transition(:up, :restart) do |on|
        on.condition(:memory_usage) do |c|
          c.above = 350.megabytes
          c.times = 2
        end
      end

      # determine the state on startup
      w.transition(:init, { true => :up, false => :start }) do |on|
        on.condition(:process_running) do |c|
          c.running = true
        end
      end

      # determine when process has finished starting
      w.transition([:start, :restart], :up) do |on|
        on.condition(:process_running) do |c|
          c.running = true
          c.interval = 5.seconds
        end

        # failsafe
        on.condition(:tries) do |c|
          c.times = 5
          c.transition = :start
          c.interval = 5.seconds
        end
      end

      # start if process is not running
      w.transition(:up, :start) do |on|
        on.condition(:process_running) do |c|
          c.running = false
        end
      end
    end
  end
end
